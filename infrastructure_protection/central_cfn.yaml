AWSTemplateFormatVersion: "2010-09-09"

Parameters:  
  # These parameters are supplied by the Quests API when this template is deployed 
  gdQuestsAPIBase:
    # Default: https://t85uaaidx0.execute-api.us-east-1.amazonaws.com/LATEST
    Description: GameDay Quests API Base URL (https://hostname:port/api)
    Type: String
  gdQuestsAPIToken:
    # Default: itiJbfZFatw5ciBH2y1miZWQgNkazQwp
    Description: API Token to use for authentication
    Type: String
  gdQuestsSnsTopicArn:
    # Default: arn:aws:sns:us-east-1:026257810738:gdQuestsApi-SnsQuestsApiTopic-6ELQWDWNOYAO
    Description: ARN of the GameDay Quests API SNS topic
    Type: String
  DeployAssetsBucket:
    # Default: ee-assets-prod-us-east-1
    Description: The name of the S3 bucket where assets are stored
    Type: String
  DeployAssetsKeyPrefix:
    # Default: modules/9c0e89820b864addaed45ec2f5440379/v2/2cbc15f3-964a-409d-bd9c-45f29d1debfa
    Description: S3 key prefix where assets are stored
    Type: String

  # Additional parameters required by this template - These parameters MUST contain default values that will be used when the Quests API deploys this quest.
  QuestId:
    Default: 2cbc15f3-964a-409d-bd9c-45f29d1debfa
    Description: The Quest ID assigned to this quest
    Type: String
  QuestLambdaSourceKey:
    Default: gdQuests-icebreaker-central-lambda-source.zip
    Description: S3 key for the Lamda source code used by the Testing Quest
    Type: String


Resources:
# ╔══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ║ DynamoDB Resources                                                                                                                                       ║
# ╠═══════════════════════════════╤═════════════════════════════╤════════════════════════════════════════════════════════════════════════════════════════════╣
# ║ IcebreakerTeamStatusTable     │ AWS::DynamoDB::Table        │ Table tracking the status and metadata for teams                                           ║
# ╚═══════════════════════════════╧═════════════════════════════╧════════════════════════════════════════════════════════════════════════════════════════════╝

  IcebreakerTeamStatusTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: team-id
        AttributeType: S
      KeySchema:
      - AttributeName: team-id
        KeyType: HASH
      BillingMode: PAY_PER_REQUEST

# ╔══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ║ AWS GameDay Quests - SNS Integration Resources                                                                                                           ║
# ╠═══════════════════════════════╤═════════════════════════════╤════════════════════════════════════════════════════════════════════════════════════════════╣
# ║ SnsLambda                     │ AWS::Lambda::Functiopn      │ Shows developers how to integrate with the Quests API SNS topic                            ║
# ║ LambdaInvokePermissionSNS     │ AWS::Lambda::Permission     │ Grants the SNS Topic permission to invoke the Lambda function                              ║
# ║ DashboardInputLambdaSubscri.. │ AWS::SNS::Subscription      │ Subscribes the Lambda function to the SNS topic                                            ║
# ╚═══════════════════════════════╧═════════════════════════════╧════════════════════════════════════════════════════════════════════════════════════════════╝

  DashboardInputLambdaSubscription:
    Type: "AWS::SNS::Subscription"
    DeletionPolicy: Retain
    Properties:
      Endpoint: !GetAtt SnsLambda.Arn
      Protocol: lambda
      TopicArn: !Ref gdQuestsSnsTopicArn

  LambdaInvokePermissionSNS: 
    Type: AWS::Lambda::Permission
    Properties: 
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn:  !Ref gdQuestsSnsTopicArn 
      FunctionName: !Ref SnsLambda

  SnsLambda:
    Type: AWS::Lambda::Function
    Properties:
      Handler: sns_lambda.lambda_handler
      Role: !GetAtt LambdaRole.Arn
      Runtime: python3.8
      Timeout: '30'
      Code:
        S3Bucket: !Ref DeployAssetsBucket
        S3Key: !Join
        - ''
        - - !Ref DeployAssetsKeyPrefix
          - !Ref QuestLambdaSourceKey
      Environment:
        Variables:
          QUEST_API_TOKEN: !Ref gdQuestsAPIToken
          QUEST_ID: !Ref QuestId
          QUEST_API_BASE: !Ref gdQuestsAPIBase
          GAMEDAY_REGION: !Ref AWS::Region
          QUEST_TEAM_STATUS_TABLE: !Ref IcebreakerTeamStatusTable
          INIT_LAMBDA: !Ref InitLambda
          UPDATE_LAMBDA: !Ref UpdateLambda
          EVENT_RULE_CRON: !Ref EventRuleLambdaCron
    DependsOn: IcebreakerTeamStatusTable

  # ╔══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
  # ║ AWS GameDay Quests - Cron Integration Resources                                                                                                          ║
  # ╠═══════════════════════════════╤═════════════════════════════╤════════════════════════════════════════════════════════════════════════════════════════════╣
  # ║ CronLambda                    │ AWS::Lambda::Function       │ Periodically triggered lambda to re-evaluate team account status using EventBridge         ║
  # ║ LambdaInvokePermissionCWE     │ AWS::Lambda::Permission     │ Grants the CloudWatch Event permission to invoke the Lambda function                       ║
  # ║ EventsRuleLambdaCron          │ AWS::Events::Rule           │ Sets the Cron trigger in CloudWatch Events                                                 ║
  # ╚═══════════════════════════════╧═════════════════════════════╧════════════════════════════════════════════════════════════════════════════════════════════╝

  CronLambda:
    Type: AWS::Lambda::Function
    Properties:
      Handler: cron_lambda.lambda_handler
      Role: !GetAtt LambdaRole.Arn
      Runtime: python3.8
      Timeout: '30'
      Code:
        S3Bucket: !Ref DeployAssetsBucket
        S3Key: !Join
        - ''
        - - !Ref DeployAssetsKeyPrefix
          - !Ref QuestLambdaSourceKey
      Environment:
        Variables:
          QUEST_API_TOKEN: !Ref gdQuestsAPIToken
          QUEST_ID: !Ref QuestId
          QUEST_API_BASE: !Ref gdQuestsAPIBase
          GAMEDAY_REGION: !Ref AWS::Region
          CHECK_TEAM_ACCOUNT_LAMBDA: !Ref CheckTeamLambda
          QUEST_TEAM_STATUS_TABLE: !Ref IcebreakerTeamStatusTable
    DependsOn:
        - IcebreakerTeamStatusTable
        - CheckTeamLambda

  LambdaInvokePermissionCWE: 
    Type: AWS::Lambda::Permission
    Properties: 
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn:  !GetAtt EventRuleLambdaCron.Arn 
      FunctionName: !Ref CronLambda

  EventRuleLambdaCron:
    Type: 'AWS::Events::Rule'
    Properties:
      Description: EventRuleLambdaCron
      ScheduleExpression: rate(1 minute)
      State: ENABLED
      Targets:
        - Arn: !GetAtt CronLambda.Arn
          Id: !Ref CronLambda

# ╔══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ║ AWS GameDay Quests -  Helper Lambda function                                                                                                             ║
# ╠═══════════════════════════════╤═════════════════════════════╤════════════════════════════════════════════════════════════════════════════════════════════╣
# ║ InitLambda                    │ AWS::Lambda::Function       │ Triggered by SnsLambda. Initializes quest output and inputs                                ║
# ║ UpdateLambda                  │ AWS::Lambda::Function       │ Triggered by SnsLambda. Handles logic for dashboard input updates from teams               ║
# ║ CheckTeamLambda               │ AWS::Lambda::Function       │ Triggered by CronLambda. Runs main team account central_lambda_source logic                ║
# ╚═══════════════════════════════╧═════════════════════════════╧════════════════════════════════════════════════════════════════════════════════════════════╝
  InitLambda:
    Type: AWS::Lambda::Function
    Properties:
      Handler: init_lambda.lambda_handler
      Role: !GetAtt LambdaRole.Arn
      Runtime: python3.8
      Timeout: '30'
      Code:
        S3Bucket: !Ref DeployAssetsBucket
        S3Key: !Join
        - ''
        - - !Ref DeployAssetsKeyPrefix
          - !Ref QuestLambdaSourceKey
      Environment:
        Variables:
          QUEST_API_TOKEN: !Ref gdQuestsAPIToken
          QUEST_ID: !Ref QuestId
          QUEST_API_BASE: !Ref gdQuestsAPIBase
          GAMEDAY_REGION: !Ref AWS::Region
          QUEST_TEAM_STATUS_TABLE: !Ref IcebreakerTeamStatusTable
    DependsOn: IcebreakerTeamStatusTable

  UpdateLambda:
    Type: AWS::Lambda::Function
    Properties:
      Handler: update_lambda.lambda_handler
      Role: !GetAtt LambdaRole.Arn
      Runtime: python3.8
      Timeout: '30'
      Code:
        S3Bucket: !Ref DeployAssetsBucket
        S3Key: !Join
        - ''
        - - !Ref DeployAssetsKeyPrefix
          - !Ref QuestLambdaSourceKey
      Environment:
        Variables:
          QUEST_API_TOKEN: !Ref gdQuestsAPIToken
          QUEST_ID: !Ref QuestId
          QUEST_API_BASE: !Ref gdQuestsAPIBase
          GAMEDAY_REGION: !Ref AWS::Region
          QUEST_TEAM_STATUS_TABLE: !Ref IcebreakerTeamStatusTable
    DependsOn:
        - IcebreakerTeamStatusTable
        - CheckTeamLambda

  CheckTeamLambda:
    Type: AWS::Lambda::Function
    Properties:
      Handler: check_team_account_lambda.lambda_handler
      Role: !GetAtt LambdaRole.Arn
      Runtime: python3.8
      Timeout: '90'
      Code:
        S3Bucket: !Ref DeployAssetsBucket
        S3Key: !Join
        - ''
        - - !Ref DeployAssetsKeyPrefix
          - !Ref QuestLambdaSourceKey
      Environment:
        Variables:
          QUEST_API_TOKEN: !Ref gdQuestsAPIToken
          QUEST_ID: !Ref QuestId
          QUEST_API_BASE: !Ref gdQuestsAPIBase
          GAMEDAY_REGION: !Ref AWS::Region
          QUEST_TEAM_STATUS_TABLE: !Ref IcebreakerTeamStatusTable
    DependsOn:
        - IcebreakerTeamStatusTable

# ╔══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ║ AWS GameDay Quests - Other Resources                                                                                                                     ║
# ╠═══════════════════════════════╤═════════════════════════════╤════════════════════════════════════════════════════════════════════════════════════════════╣
# ║ LambdaRole                    │ AWS::IAM::Role              │ Grants Permissions to all Lambda functions used in this Testing Quest                      ║
# ╚═══════════════════════════════╧═════════════════════════════╧════════════════════════════════════════════════════════════════════════════════════════════╝
  LambdaRole:
    Type: "AWS::IAM::Role"
    Properties: 
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - 
        PolicyName: LambdaPolicy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - logs:DescribeLogStreams
            Resource: "*"
            # need to scope this down eventually
          - Effect: Allow
            Action: "*"
            Resource: "*"


Outputs:
  TableName:
    Value: !Ref 'IcebreakerTeamStatusTable'
    Description: Table name of the newly created DynamoDB table